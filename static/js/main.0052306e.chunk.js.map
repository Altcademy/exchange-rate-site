{"version":3,"sources":["Layout.js","utils/currencies.js","utils/fetchUtils.js","CurrencyTable.js","Home.js","CurrencyConverter.js","App.js","serviceWorker.js","index.js"],"names":["Layout","props","react_default","a","createElement","Fragment","className","react_router_dom","to","children","href","target","rel","currencies","AUD","symbol","name","BGN","BRL","CAD","CHF","CNY","CZK","DKK","EUR","GBP","HKD","HRK","HUF","IDR","ILS","INR","ISK","JPY","KRW","MXN","MYR","NOK","NZD","PHP","PLN","RON","RUB","SEK","SGD","THB","TRY","USD","ZAR","checkStatus","response","ok","Error","json","CurrencyTable","base","rates","scope","map","currency","key","acronym","concat","rate","toFixed","Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeBase","event","setState","value","getRatesData","loading","fetch","then","data","error","keys","filter","catch","console","message","state","_this$state","onChange","disabled","currencyAcronym","src_CurrencyTable","React","Component","CurrencyConverter","getRate","quote","baseValue","quoteValue","Number","getHistoricalRates","endDate","Date","toISOString","split","startDate","getTime","chartLabels","chartData","values","chartLabel","buildChart","labels","label","chartRef","current","getContext","chart","destroy","Chart","type","datasets","fill","tension","options","responsive","changeBaseAcronym","baseAcronym","quoteAcronym","changeBaseValue","convert","toQuote","changeQuoteAcronym","changeQuoteValue","toBase","params","URLSearchParams","location","search","get","createRef","amount","equation","input","parseFloat","isNaN","_this$state2","currencyOptions","id","ref","App","basename","src_Layout","react_router","path","exact","component","render","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0052306e.chunk.js","sourcesContent":["// Layout.js\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Layout = (props) => {\n  return (\n    <React.Fragment>\n      <nav className=\"navbar navbar-light bg-light\">\n        <Link to=\"/\"><span className=\"navbar-brand mb-0 h1\">Currency Exchange Rates</span></Link>\n      </nav>\n      <div className=\"container py-3\">\n        {props.children}\n      </div>\n      <footer className=\"p-3 bg-light\">\n        <div className=\"mb-2\">\n          <a className=\"badge badge-dark\" href=\"https://github.com/Altcademy/exchange-rate-site\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>\n        </div>\n        <div>\n          <span className=\"mr-3 text-secondary\">Built by <a href=\"https://www.altcademy.com\" target=\"_blank\" rel=\"noopener noreferrer\">Altcademy</a> with ☕ and 💜</span>\n        </div>\n      </footer>\n    </React.Fragment>\n  );\n}\n\nexport default Layout;\n","// currencies.js\nconst currencies = {\n  AUD: {\n    symbol: '$',\n    name: 'Australian dollar',\n  },\n  BGN: {\n    symbol: 'лв',\n    name: 'Bulgarian lev',\n  },\n  BRL: {\n    symbol: 'R$',\n    name: 'Brazilian real',\n  },\n  CAD: {\n    symbol: '$',\n    name: 'Canadian dollar',\n  },\n  CHF: {\n    symbol: 'Fr',\n    name: 'Swiss franc',\n  },\n  CNY: {\n    symbol: '¥',\n    name: 'Chinese yuan',\n  },\n  CZK: {\n    symbol: 'Kč',\n    name: 'Czech koruna',\n  },\n  DKK: {\n    symbol: 'kr',\n    name: 'Danish krone',\n  },\n  EUR: {\n    symbol: '€',\n    name: 'Euro',\n  },\n  GBP: {\n    symbol: '£',\n    name: 'British pound',\n  },\n  HKD: {\n    symbol: '$',\n    name: 'Hong Kong dollar',\n  },\n  HRK: {\n    symbol: 'kn',\n    name: 'Croatian kuna',\n  },\n  HUF: {\n    symbol: 'Ft',\n    name: 'Hungarian forint',\n  },\n  IDR: {\n    symbol: 'Rp',\n    name: 'Indonesian rupiah',\n  },\n  ILS: {\n    symbol: '₪',\n    name: 'Israeli new shekel',\n  },\n  INR: {\n    symbol: '₹',\n    name: 'Indian rupee',\n  },\n  ISK: {\n    symbol: 'kr',\n    name: 'Icelandic króna',\n  },\n  JPY: {\n    symbol: '¥',\n    name: 'Japanese yen',\n  },\n  KRW: {\n    symbol: '₩',\n    name: 'South Korean won',\n  },\n  MXN: {\n    symbol: '$',\n    name: 'Mexican peso',\n  },\n  MYR: {\n    symbol: 'RM',\n    name: 'Malaysian ringgit',\n  },\n  NOK: {\n    symbol: 'kr',\n    name: 'Norwegian krone',\n  },\n  NZD: {\n    symbol: '$',\n    name: 'New Zealand dollar',\n  },\n  PHP: {\n    symbol: '₱',\n    name: 'Philippine peso',\n  },\n  PLN: {\n    symbol: 'zł',\n    name: 'Polish złoty ',\n  },\n  RON: {\n    symbol: 'lei',\n    name: 'Romanian leu',\n  },\n  RUB: {\n    symbol: '₽',\n    name: 'Russian ruble',\n  },\n  SEK: {\n    symbol: 'kr',\n    name: 'Swedish krona',\n  },\n  SGD: {\n    symbol: '$',\n    name: 'Singapore dollar',\n  },\n  THB: {\n    symbol: '฿',\n    name: 'Thai baht',\n  },\n  TRY: {\n    symbol: '₺',\n    name: 'Turkish lira',\n  },\n  USD: {\n    symbol: '$',\n    name: 'United States dollar',\n  },\n  ZAR: {\n    symbol: 'R',\n    name: 'South African rand',\n  },\n}\n\nexport default currencies;\n","// fetchUtils.js\nexport const checkStatus = (response) => {\n  if (response.ok) {\n    // .ok returns true if response status is 200-299\n    return response;\n  }\n  throw new Error('Request was either a 404 or 500');\n}\n\nexport const json = (response) => response.json()\n","// CurrencyTable.js\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst CurrencyTable = (props) => {\n  const { base, rates } = props;\n  if (!rates) {\n    return null;\n  }\n  return (\n    <table className=\"table table-sm bg-light mt-4\">\n      <thead>\n        <tr>\n          <th scope=\"col\"></th>\n          <th scope=\"col\" className=\"text-right pr-4 py-2\">1.00 {base}</th>\n        </tr>\n      </thead>\n      <tbody>\n        {rates.map(currency =>\n          <tr key={currency.acronym}>\n            <td className=\"pl-4 py-2\">{currency.name} <small>({currency.acronym})</small></td>\n            <td className=\"text-right pr-4 py-2\"><Link to={`/currencyconverter?base=${base}&quote=${currency.acronym}`}>{currency.rate.toFixed(6)}</Link></td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  )\n}\n\nexport default CurrencyTable\n","// Home.js\nimport React from 'react';\nimport currencies from './utils/currencies';\nimport { checkStatus, json } from './utils/fetchUtils';\nimport CurrencyTable from './CurrencyTable';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      base: 'USD',\n      rates: null,\n      loading: true,\n    }\n  }\n\n  componentDidMount() {\n    this.getRatesData(this.state.base);\n  }\n\n  changeBase = (event) => {\n    this.setState({ base: event.target.value });\n    this.getRatesData(event.target.value);\n  }\n\n  getRatesData = (base) => {\n    this.setState({ loading: true });\n    fetch(`https://api.frankfurter.app/latest?from=${base}`)\n      .then(checkStatus)\n      .then(json)\n      .then(data => {\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        const rates = Object.keys(data.rates)\n          .filter(acronym => acronym !== base)\n          .map(acronym => ({\n            acronym,\n            rate: data.rates[acronym],\n            name: currencies[acronym].name,\n            symbol: currencies[acronym].symbol,\n          }))\n\n        this.setState({ rates, loading: false });\n      })\n      .catch(error => console.error(error.message));\n  }\n\n  render () {\n    const { base, rates, loading } = this.state;\n\n    return (\n      <React.Fragment>\n        <form className=\"p-3 bg-light form-inline justify-content-center\">\n          <h3 className=\"mb-2\">Base currency: <b className=\"mr-2\">1</b></h3>\n          <select value={base} onChange={this.changeBase} className=\"form-control form-control-lg mb-2\" disabled={loading}>\n            {Object.keys(currencies).map(currencyAcronym => <option key={currencyAcronym} value={currencyAcronym}>{currencyAcronym}</option>)}\n          </select>\n        </form>\n        <CurrencyTable base={base} rates={rates} />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Home;\n","// CurrencyConverter.js\nimport React from 'react';\nimport Chart from 'chart.js';\nimport currencies from './utils/currencies';\nimport { checkStatus, json } from './utils/fetchUtils';\n\nclass CurrencyConverter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const params = new URLSearchParams(props.location.search);\n\n    this.state = {\n      rate: 0,\n      baseAcronym: params.get('base') || 'USD',\n      baseValue: 0,\n      quoteAcronym: params.get('quote') || 'JPY',\n      quoteValue: 0,\n      loading: false,\n    };\n\n    this.chartRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { baseAcronym, quoteAcronym } = this.state;\n    this.getRate(baseAcronym, quoteAcronym);\n    this.getHistoricalRates(baseAcronym, quoteAcronym);\n  }\n\n  getRate = (base, quote) => {\n    this.setState({ loading: true });\n    fetch(`https://api.frankfurter.app/latest?from=${base}&to=${quote}`)\n      .then(checkStatus)\n      .then(json)\n      .then(data => {\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        const rate = data.rates[quote];\n\n        this.setState({\n          rate,\n          baseValue: 1,\n          quoteValue: Number((1 * rate).toFixed(3)),\n          loading: false,\n        });\n      })\n      .catch(error => console.error(error.message));\n  }\n\n  getHistoricalRates = (base, quote) => {\n    const endDate = new Date().toISOString().split('T')[0];\n    const startDate = new Date((new Date).getTime() - (30 * 24 * 60 * 60 * 1000)).toISOString().split('T')[0];\n\n    fetch(`https://api.frankfurter.app/${startDate}..${endDate}?from=${base}&to=${quote}`)\n      .then(checkStatus)\n      .then(json)\n      .then(data => {\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        const chartLabels = Object.keys(data.rates);\n        const chartData = Object.values(data.rates).map(rate => rate[quote]);\n        const chartLabel = `${base}/${quote}`;\n        this.buildChart(chartLabels, chartData, chartLabel);\n      })\n      .catch(error => console.error(error.message));\n  }\n\n  buildChart = (labels, data, label) => {\n    const chartRef = this.chartRef.current.getContext(\"2d\");\n\n    if (typeof this.chart !== \"undefined\") {\n      this.chart.destroy();\n    }\n\n    this.chart = new Chart(this.chartRef.current.getContext(\"2d\"), {\n      type: 'line',\n      data: {\n        labels,\n        datasets: [\n          {\n            label: label,\n            data,\n            fill: false,\n            tension: 0,\n          }\n        ]\n      },\n      options: {\n        responsive: true,\n      }\n    })\n  }\n\n  toBase(amount, rate) {\n    return amount * (1 / rate);\n  }\n\n  toQuote(amount, rate) {\n    return amount * rate;\n  }\n\n  convert(amount, rate, equation) {\n    const input = parseFloat(amount);\n    if (Number.isNaN(input)) {\n      return '';\n    }\n    return equation(input, rate).toFixed(3);\n  }\n\n  changeBaseAcronym = (event) => {\n    const baseAcronym = event.target.value;\n    this.setState({ baseAcronym });\n    this.getRate(baseAcronym, this.state.quoteAcronym);\n    this.getHistoricalRates(baseAcronym, this.state.quoteAcronym);\n  }\n\n  changeBaseValue = (event) => {\n    const quoteValue = this.convert(event.target.value, this.state.rate, this.toQuote);\n    this.setState({\n      baseValue: event.target.value,\n      quoteValue,\n    });\n  }\n\n  changeQuoteAcronym = (event) => {\n    const quoteAcronym = event.target.value;\n    this.setState({ quoteAcronym });\n    this.getRate(this.state.baseAcronym, quoteAcronym);\n    this.getHistoricalRates(this.state.baseAcronym, quoteAcronym);\n  }\n\n  changeQuoteValue = (event) => {\n    const baseValue = this.convert(event.target.value, this.state.rate, this.toBase);\n    this.setState({\n      quoteValue: event.target.value,\n      baseValue,\n    });\n  }\n\n  render() {\n    const { rate, baseAcronym, baseValue, quoteAcronym, quoteValue, loading } = this.state;\n\n    const currencyOptions = Object.keys(currencies).map(currencyAcronym => <option key={currencyAcronym} value={currencyAcronym}>{currencyAcronym}</option>);\n\n    return (\n      <React.Fragment>\n        <div className=\"text-center p-3\">\n          <h2 className=\"mb-2\">Currency Converter</h2>\n          <h4>1 {baseAcronym} to 1 {quoteAcronym} = {rate.toFixed(4)} {currencies[quoteAcronym].name}</h4>\n        </div>\n        <form className=\"form-row p-3 mb-4 bg-light justify-content-center\">\n          <div className=\"form-group col-md-5 mb-0\">\n            <select value={baseAcronym} onChange={this.changeBaseAcronym} className=\"form-control form-control-lg mb-2\" disabled={loading}>\n              {currencyOptions}\n            </select>\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <div className=\"input-group-text\">{currencies[baseAcronym].symbol}</div>\n              </div>\n              <input id=\"base\" className=\"form-control form-control-lg\" value={baseValue} onChange={this.changeBaseValue} type=\"number\" />\n            </div>\n            <small className=\"text-secondary\">{currencies[baseAcronym].name}</small>\n          </div>\n          <div className=\"col-md-2 py-3 d-flex justify-content-center align-items-center\">\n            <h3>=</h3>\n          </div>\n          <div className=\"form-group col-md-5 mb-0\">\n            <select value={quoteAcronym} onChange={this.changeQuoteAcronym} className=\"form-control form-control-lg mb-2\" disabled={loading}>\n              {currencyOptions}\n            </select>\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <div className=\"input-group-text\">{currencies[quoteAcronym].symbol}</div>\n              </div>\n              <input id=\"quote\" className=\"form-control form-control-lg\" value={quoteValue} onChange={this.changeQuoteValue} type=\"number\" />\n            </div>\n            <small className=\"text-secondary\">{currencies[quoteAcronym].name}</small>\n          </div>\n        </form>\n        <canvas ref={this.chartRef} />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default CurrencyConverter\n","// App.js\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Layout from './Layout';\nimport Home from './Home';\nimport CurrencyConverter from './CurrencyConverter';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <Router basename=\"/exchange-rate-site\">\n      <Layout>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/currencyconverter\" component={CurrencyConverter} />\n          <Route render={() => <h1>404 Not found</h1>} />\n        </Switch>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}